@startuml "attach<T>(entity) structural migration"

actor User
participant Session
participant TxLog
participant DB
participant Committer
participant Catalog
participant AlterPlans
participant EntityIndex
participant Table as FromTable
participant Table2 as ToTable

User -> Session : attach<T>(e, init)
Session -> TxLog : append_attach(e, T{init})

== end of frame ==
User -> DB : commit(session)
DB -> Committer : apply(db, txlog)

Committer -> EntityIndex : locate(e) -> {from_id,row}
Committer -> Catalog : get(from_id) -> FromTable
Committer -> Signature : from_sig = FromTable.signature()
Committer -> Signature : to_sig = from_sig.add(T)

Committer -> Catalog : get_or_create(to_sig) -> to_id, ToTable
Committer -> AlterPlans : plan(from_sig, to_sig) -> Plan

Committer -> FromTable : read columns per Plan
Committer -> ToTable : append row, construct T
Committer -> EntityIndex : update(e -> {to_id,new_row})
Committer -> FromTable : remove row (swap-pop)

Committer -> DB : bump clocks/versions
Committer -> TxLog : clear

@enduml
