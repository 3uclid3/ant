name: CI Windows

on:
  pull_request:
  push:
    paths-ignore:
      - ".github/workflows/build-images.yml"
      - ".github/workflows/coverage.yml"
      - ".github/workflows/ci-linux.yml"
      - ".gitignore"
      - "AGENTS.md"
      - "CHANGELOG.md"
      - "Dockerfile"
      - "LICENSE"
      - "README.md"

concurrency:
  group: ci-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    permissions:
      actions: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        build_type: [debug, release]

    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    steps:
      - name: Get current week as package key (pwsh)
        id: cache_key
        shell: pwsh
        run: |
          $calendar = [System.Globalization.CultureInfo]::InvariantCulture.Calendar
          $week = $calendar.GetWeekOfYear((Get-Date), [System.Globalization.CalendarWeekRule]::FirstFourDayWeek, [System.DayOfWeek]::Monday)
          "key=$week" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Checkout
        uses: actions/checkout@v4

      # Force xmake to a specific folder (for cache)
      - name: Set xmake env
        shell: pwsh
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}

      # Update xmake repository (in order to have the file that will be cached)
      - name: Update xmake repository
        run: xmake repo --update

      # Fetch xmake dependency_hash
      - name: Retrieve dependencies hash
        id: dependency_hash
        shell: pwsh
        run: echo "hash=$(xmake l utils.ci.packageskey)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      # Cache xmake dependencies
      - name: Restore cached xmake dependencies
        id: restore-depcache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: MSVC-${{ matrix.build_type }}-${{ steps.dependency_hash.outputs.hash }}-W${{ steps.cache_key.outputs.key }}
          restore-keys: |
            MSVC-${{ matrix.build_type }}-${{ steps.dependency_hash.outputs.hash }}-

      # Configure build
      - name: Configure
        run: xmake f -m ${{ matrix.build_type }} -y

      # Save dependencies
      - name: Save cached xmake dependencies
        if: ${{ !steps.restore-depcache.outputs.cache-hit }}
        uses: actions/cache/save@v4
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: ${{ steps.restore-depcache.outputs.cache-primary-key }}

      - name: Run unit tests
        run: xmake test -g tests/unit

      - name: Run compile tests
        run: xmake test -g tests/compile
